---
- delegate_to: "{{ groups.kubernetes_master.0 }}"
  block:
    - name: Check if node is registered with Kubernetes cluster
      environment:
        KUBECONFIG: "/etc/kubernetes/admin.conf"
      shell: |
        kubectl get nodes \
          --no-headers \
          -o=custom-columns=INTERNAL-IP:.status.addresses[*].address \
        | grep -w {{ hostvars[inventory_hostname].ansible_default_ipv4.address }}
      register: hostname_in_cluster
      failed_when: hostname_in_cluster.rc == 2 or hostname_in_cluster.stderr  # do not fail when grep doesn't match but detect errors in pipeline
      changed_when: false

- name: Check if /var/lib/kubelet/config.yaml exists  # created by 'kubeadm join'
  stat:
    path: /var/lib/kubelet/config.yaml
    get_attributes: false
    get_checksum: false
    get_mime: false
  register: kubelet_config_yaml
  changed_when: false

- name: Check if node has been joined
  set_fact:
    node_already_joined: >-
      {{ hostname_in_cluster.rc == 0 and kubelet_config_yaml.stat.exists }}
  changed_when: false

- delegate_to: "{{ groups.kubernetes_master.0 }}"
  when: not node_already_joined
  block:
    - name: Get token from master
      shell: |
        kubeadm token list \
        | grep -w authentication \
        | grep -vwi invalid \
        | awk '{print $1}' \
        | head -1
      register: kubeadm_valid_token
      failed_when: kubeadm_valid_token.rc != 0 or kubeadm_valid_token.stderr  # detect errors in pipeline
      changed_when: false

    - name: Create new token
      shell: |
        kubeadm token create \
          --ttl 4h \
          --description "Token generated by Epiphany for 'kubeadm join'."
      register: kubeadm_new_token
      when: not kubeadm_valid_token.stdout

    - name: Get CA key hash
      shell: |
        openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt \
        | openssl rsa -pubin -outform der 2>/dev/null \
        | openssl dgst -sha256 -hex \
        | sed 's/^.* //'
      register: kubeadm_cert_hash
      changed_when: false

- when: not node_already_joined
  block:
    - name: Render /etc/kubeadm/kubeadm-join-node.yml template
      vars:
        kubeadm_token: >-
          {{ kubeadm_valid_token.stdout if kubeadm_valid_token.stdout else kubeadm_new_token.stdout_lines[-1] }}
        api_server_url: >-
          {%- if specification.use_ha_control_plane -%}
            localhost:3446
          {%- else -%}
            {{ hostvars[groups.kubernetes_master.0].ansible_default_ipv4.address }}:6443
          {%- endif -%}
      block:
        - name: Creates directory
          file:
            path: /etc/kubeadm/
            state: directory
            owner: root
            group: root
            mode: u=rw,go=r

        - name: Create kubeadm JoinConfiguration
          become: true
          template:
            src: kubeadm-join-node.yml.j2
            dest: /etc/kubeadm/kubeadm-join-node.yml
            owner: root
            group: root
            mode: u=rw,go=r

        - block:
            - name: Join to Kubernetes cluster
              shell: |
                kubeadm join \
                  --config /etc/kubeadm/kubeadm-join-node.yml
              register: kubeadm_join_result
              async: 120
              poll: 15

          rescue:
            - name: Join to cluster with ignores
              shell: |
                kubeadm join \
                  --config /etc/kubeadm/kubeadm-join-node.yml \
                  --ignore-preflight-errors all
              register: kubeadm_join_result
              async: 180
              poll: 15

          always:
            - name: Display kubeadm join stderr if any
              debug:
                msg: |
                  Joined with warnings
                  {{ kubeadm_join_result.stderr_lines }}
              when: kubeadm_join_result is failed
